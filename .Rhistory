getwd()
setwd("/home/anirudh/Documents/data analysis for life sciences")
ls
setwd("/home/anirudh/Documents/data analysis for life sciences")
dat <- read.csv("femaleMiceWeights.csv")
setwd("/home/anirudh/Documents/data analysis for life sciences /")
ls
dat <- read.csv("femaleMiceWeights.csv")
head(dat)
library(dplyr)
control <- filter(dat,Diet=="chow") %>%
select(Bodyweight) %>%
unlist
dat <- read.csv("mice_pheno.csv")
head(dat)
controlPopulation <- filter(dat, Sex=="F" & Diet == "chow") %>%
select(Bodyweight) %>% unlist
hfPopulation <- filter(dat, Sex == "F" & Diet == "hf") %>%
select(Bodyweight) %>% unlist
mu_hf <- mean(hfPopulation)
mu_control <- mean(controlPopulation)
print(mu_hf - mu_control)
library(rafalib)
sd_hf <- popsd(hfPopulation)
sd_control <- popsd(controlPopulation)
N <- 12
hf <- sample(hfPopulation, 12)
control <- sample(controlPopulation, 12)
Ns <- c(3,12,25,50)
B <- 1000
res <- sapply(Ns, function(x) {
replicate(B, mean(sample(hfPopulation,n)) - mean(sample(controlPopulation,n)))
})
B <- 1000
res <- sapply(Ns, function(x) {
replicate(B, mean(sample(hfPopulation,n)) - mean(sample(controlPopulation,n)))
})
Ns <- c(3,12,25,50)
B <- 10000 #number of simulations
res <-  sapply(Ns,function(n) {
replicate(B,mean(sample(hfPopulation,n))-mean(sample(controlPopulation,n)))
})
mypar(2,2)
for (i in seq(along=Ns)) {
titleavg <- signif(mean(res[,i]),3)
titlesd <- signif(popsd(res[,i]),3)
title <- paste0("N=",Ns[i],"Avg="titleavg,"SD=",titlesd)
qqnorm(res[,i],main=title)
qqline(res[,i],col=2)
}
for (i in seq(along=Ns)) {
titleavg <- signif(mean(res[,i]),3)
titlesd <- signif(popsd(res[,i]),3)
title <- paste0("N=",Ns[i]," Avg=",titleavg," SD=",titlesd)
qqnorm(res[,i],main=title)
qqline(res[,i],col=2)
}
res
class(res)
length(res)
size(res)
dim(res)
View(res)
?along
?signif
Ns <- c(3,12,25,50)
B <- 10000
computestat <- function(n){
y <- sample(hfPopulation,n)
x <- sample(controlPopulation,n)
(mean(y)-mean(x))/sqrt(var(y)/n+var(x)/n)
}
res <- sapply(Ns, function(n){
replicate(B,computestat(n))
})
mypar(2,2)
for (i in seq(along=Ns)){
qqnorm(res[,i],main=Ns[i])
qqline(res[,i],col=2)
}
### Exercises ###
dat <- read.csv("femaleMiceWeights.csv")
View(dat)
n <- 100
x <- sample(1:6, n, replace = TRUE)
x
mean(x==6)
n <- 10000
?replicate
n <- 100
x <- sample(1:6, n, replace = TRUE)
mean(x==6)
avgd <- replicate(10000,mean(sample(1:6, n, replace = TRUE) == 6))
dim(avgd)
length(avgd)
avgd
1/6
mean(avgd)
set.seed(1)
avgd <- replicate(10000,mean(sample(1:6, n, replace = TRUE) == 6))
z <- (avgd - p) / (sqrt(p*(1-p)/n))
p = 1/6
z <- (avgd - p) / (sqrt(p*(1-p)/n))
hist(z)
mypar(1,1)
hist(z)
mean(abs(z) >= 2)
qqnorm(z)
qqline(z)
mypar(2,2)
n <- 5
x <- sample(1:6, n, replace = TRUE)
set.seed(1)
avgd <- replicate(10000,mean(sample(1:6, n, replace = TRUE) == 6))
p = 0.5
z <- (avgd - p) / (sqrt(p*(1-p)/n))
qqnorm(z)
qqline(z)
n <- 30
x <- sample(1:6, n, replace = TRUE)
set.seed(1)
avgd <- replicate(10000,mean(sample(1:6, n, replace = TRUE) == 6))
p = 0.5
z <- (avgd - p) / (sqrt(p*(1-p)/n))
qqnorm(z)
qqline(z)
n <- 30
x <- sample(1:6, n, replace = TRUE)
set.seed(1)
avgd <- replicate(10000,mean(sample(1:6, n, replace = TRUE) == 6))
p = 0.01
z <- (avgd - p) / (sqrt(p*(1-p)/n))
qqnorm(z)
qqline(z)
n <- 100
x <- sample(1:6, n, replace = TRUE)
set.seed(1)
avgd <- replicate(10000,mean(sample(1:6, n, replace = TRUE) == 6))
p = 0.01
z <- (avgd - p) / (sqrt(p*(1-p)/n))
qqnorm(z)
qqline(z)
X <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
Y <- filter(dat, Diet=="hf") %>% select(Bodyweight) %>% unlist
mean(X)
popsd(X)
Z <- (5.21*sqrt(12)) / popsd(X)
(1-pnorm(Z)) + pnorm(-Z)
5.21/popsd(X)
1 - pnorm(Z)
Z
pnorm(Z)
?pnorm
pnorm(5.21,sd=popsd(X)/sqrt(12))
hist(X)
hist(X/(popsd(X)/sqrt(12)))
mean(X)
var(X)
popsd(X)
X >28
sum(X>28)
?se
se <- sqrt((popsd(Y)*popsd(Y)/12) + (popsd(X)*popsd(X)/12))
se
z <- 5.21/se
z
pnorm(z)
(1-pnorm(z))
(1-pnorm(z)) + pnorm(-z)
?t.test
hist(z)
z
mypar(1,1)
z
hist(z)
qqnorm(X)
ppnorm(Y)
qqnorm(Y)
t.test(X,Y)
(1-pnorm(z))
dat <- read.csv("femaleMiceWeights.csv")
control <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
treatment <- filter(dat, Diet=="hf") %>% select(Bodyweight) %>% unlist
diff <- mean(treatment) - mean(control)
print(diff)
View(dat)
sd(control)/sqrt(length(control))
popsd(control)
### Exercises ###
dat <- read.csv("femaleMiceWeights.csv")
X <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
Y <- filter(dat, Diet=="hf") %>% select(Bodyweight) %>% unlist
mean(X)
"4. D"
"5. Zero"
"6."
sd(X)/sqrt(length(X))
seX <- sd(X)/sqrt(length(X))
Z <- 5.21 / se
(1-pnorm(Z)) + pnorm(-Z)
"8."
se <- sqrt((sd(Y)*sd(Y)/12) + (sd(X)*sd(X)/12))
z <- 5.21/se
(1-pnorm(z))
dat <- read.csv("femaleMiceWeights.csv")
control <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
treatment <- filter(dat, Diet=="hf") %>% select(Bodyweight) %>% unlist
diff <- mean(treatment) - mean(control)
print(diff)
sd(control)/sqrt(length(control))
se <- sqrt(
var(treatment)/length(treatment) +
var(control)/length(control)
)
diff
tstat <- diff/se
righttail <- 1 - pnorm(abs(tstat))
lefttail <- pnorm(-abs(tstat))
pval <- lefttail + righttail
print(pval)
mypar(1,2)
qqnorm(treatment)
qqline(treatment,col=2)
qqnorm(control)
qqpline(control,col=2)
qqline(control,col=2)
t.test(treatment, control)
result <- t.test(treatment,control)
result
result$p.value
dat <- read.csv("mice_pheno.csv")
control <- filter(dat, Diet=="chow") %>% select(Bodyweight)
treatment <- filter(dat, Diet=="hf") %>% select(Bodyweight)
t.test(treatment,control)
View(dat)
n <- 100
x <- sample(1:6, n, replace = TRUE)
mean(x==6)
set.seed(1)
avgd <- replicate(10000,mean(sample(1:6, n, replace = TRUE) == 6))
p = 1/6
z <- (avgd - p) / (sqrt(p*(1-p)/n))
mean(abs(z) >= 2)
### Exercises ###
dat <- read.csv("femaleMiceWeights.csv")
X <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
Y <- filter(dat, Diet=="hf") %>% select(Bodyweight) %>% unlist
mean(X)
se <- sqrt((sd(Y)*sd(Y)/12) + (sd(X)*sd(X)/12))
se
t.test(X,Y)
z <- 5.21/se
2*(1-pnorm(z))
dat <- read.csv("mice_pheno.csv")
chowPopulation <- dat[dat$Sex=="F" & dat$Diet=="chow",3]
chowPopulation
class(chowPopulation)
mu_chow <- mean(chowPopulation)
print(mu_chow)
N <- 30
chow <- sample(chowPopulation,N)
print(mean(chow))
View(dat)
length(chowPopulation)
se <- sd(chow)/sqrt(N)
print(se)
pnorm(2)-pnorm(-2)
Q <- qnorm(1 - 0.05/2)
Q
?qnorm
interval <- x(mean(chow)-Q*se,mean(chow)+Q*se)
interval <- c(mean(chow)-Q*se,mean(chow)+Q*se)
interval
interval[1] < mu_chow & interval[2] > mu_chow
B <- 250
mypar()
plot(mean(chowPopulation)+c(-7,7),c(1,1),type="n",
xlab="weight",ylab="interval",ylim(1,B))
plot(mean(chowPopulation)+c(-7,7),c(1,1),type="n",
xlab="weight",ylab="interval",ylim=c(1,B))
plot(mean(chowPopulation)+c(-7,7),c(1,1),type="n",
xlab="weight",ylab="interval",ylim=c(1,B))
abline(v=mean(chowPopulation))
for (i in 1:B){
chow <- sample(chowPopulation,N)
se <- sd(chow)/sqrt(N)
interval <- c(mean(chow)-Q*se,mean(chow)+Q*se)
covered <-
mean(chowPopulation) <= interval[2] & mean(chowPopulation) >= interval[1]
color <- ifelse(covered,1,2)
lines(interval,c(i,i),col=color)
}
mypar()
plot(mean(chowPopulation)+c(-7,7),c(1,1),type="n",
xlab="weight",ylab="interval",ylim=c(1,B))
abline(v=mean(chowPopulation))
Q <- qnorm(1- 0.05/2)
N <- 5
for (i in 1:B) {
chow <- sample(chowPopulation,N)
se <- sd(chow)/sqrt(N)
interval <- c(mean(chow)-Q*se, mean(chow)+Q*se)
covered <- mean(chowPopulation) <= interval[2] & mean(chowPopulation) >= interval[1]
color <- ifelse(covered,1,2)
lines(interval, c(i,i),col=color)
}
mypar()
plot(mean(chowPopulation)+c(-7,7),c(1,1),type="n",
xlab="weight",ylab="interval",ylim=c(1,B))
abline(v=mean(chowPopulation))
Q <- qt(1- 0.05/2, df=4)
N <- 5
for (i in 1:B) {
chow <- sample(chowPopulation,N)
se <- sd(chow)/sqrt(N)
interval <- c(mean(chow)-Q*se, mean(chow)+Q*se)
covered <- mean(chowPopulation) <= interval[2] & mean(chowPopulation) >= interval[1]
color <- ifelse(covered,1,2)
lines(interval, c(i,i),col=color)
}
qnorm(1-0.05/2)
qt(1-0.05/2,df=4)
